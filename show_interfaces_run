import re
import pandas as pd
import yaml
import paramiko
from getpass import getpass

# Load devices from the YAML file
def load_devices(yaml_file_path):
    with open(yaml_file_path) as file:
        return yaml.safe_load(file)

# Create an SSH client and connect to a device
def create_ssh_client(hostname, username, password):
    ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh_client.connect(hostname=hostname, username=username, password=password)
        return ssh_client
    except Exception as e:
        print(f"An error occurred while connecting to {hostname}: {e}")
        return None

# Execute a command on the device and return the output
def execute_command(ssh_client, command):
    stdin, stdout, stderr = ssh_client.exec_command(command)
    return stdout.read().decode('utf-8').strip()

# Parse the 'show ip int brief' output for Nexus devices
def parse_nexus_ip_int_brief(output):
    pattern = re.compile(r'(\S+)\s+(\d+\.\d+\.\d+\.\d+)\s+.*\s+(up|down)\s+(up|down)')
    data = []
    for line in output.split('\n'):
        match = pattern.match(line)
        if match:
            data.append({
                'Interface': match.group(1),
                'IP Address': match.group(2),
                'Status': match.group(3),
                'Protocol': match.group(4)
            })
    return data

# Parse the 'show int status | include connected' output for Catalyst devices
def parse_catalyst_int_status(output):
    pattern = re.compile(r'(\S+)\s+connected\s+.*\s+(\d+)\s+.*')
    data = []
    for line in output.split('\n'):
        match = pattern.match(line)
        if match:
            data.append({
                'Interface': match.group(1),
                'VLAN': match.group(2),
                'Status': 'connected'
            })
    return data

# Main execution function
def main():
    yaml_file_path = 'devices.yaml'  # Path to your YAML file
    devices_by_category = load_devices(yaml_file_path)

    # Prompt for credentials
    username = input("Enter username for all devices: ")
    password = getpass("Enter password for all devices: ")

    all_device_data = []

    # Iterate over each device category and device within it
    for category, device_list in devices_by_category.items():
        for device_info in device_list:
            hostname = device_info['host']
            print(f"Processing {category} device: {hostname}...")

            # Ensure hostname is a string
            if not isinstance(hostname,**â¬¤**