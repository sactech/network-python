import paramiko
import pandas as pd
import yaml
from getpass import getpass

def load_devices(yaml_file_path):
    with open(yaml_file_path) as file:
        return yaml.safe_load(file)

def create_ssh_client(hostname, username, password):
    ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh_client.connect(hostname=hostname, username=username, password=password)
        return ssh_client
    except Exception as e:
        print(f"An error occurred while connecting to {hostname}: {e}")
        return None

def execute_command(ssh_client, command):
    stdin, stdout, stderr = ssh_client.exec_command(command)
    return stdout.read().decode('utf-8').strip()

def get_vlan_interfaces(ssh_client):
    command = "show vlan brief"
    output = execute_command(ssh_client, command)
    vlan_ids = re.findall(r'\d+', output)  # Extract VLAN IDs from "show vlan brief" output
    return [f"Vlan{id}" for id in vlan_ids]

def main():
    yaml_file_path = 'devices.yaml'
    devices = load_devices(yaml_file_path)

    username = input("Enter username for all devices: ")
    password = getpass("Enter password for all devices: ")

    vlan_data = []

    for device in devices:
        hostname = device['host']
        ssh_client = create_ssh_client(hostname, username, password)
        if ssh_client:
            vlan_interfaces = get_vlan_interfaces(ssh_client)
            for vlan in vlan_interfaces:
                config_output = execute_command(ssh_client, f'show run interface {vlan}')
                vlan_data.append({'Interface': vlan, 'Configuration': config_output})
            ssh_client.close()

    if vlan_data:
        df = pd.DataFrame(vlan_data)
        df.to_csv('vlan_interfaces_config.csv', index=False)
        print("VLAN interfaces configuration saved to vlan_interfaces_config.csv.")
    else:
        print("No VLAN interfaces data collected.")

if __name__ == "__main__":
    main()
