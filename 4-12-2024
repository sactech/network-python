import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

def process_output(output):
    data_rows = []
    current_row = []  # Initialize an empty list for current port-channel processing

    for line in output.splitlines():
        # Strip the line of leading and trailing whitespace
        line = line.strip()
        print(f"Processing line: {line}")  # Debug print to see the line being processed

        if line.startswith('Po'):  # Detecting the start of a new port-channel entry
            if current_row:  # If there is an existing port-channel being processed, append it first
                data_rows.append(current_row)
            # Reset current_row with new port-channel data
            parts = line.split()
            port_channel = parts[0]
            member_ports = parts[4:] if len(parts) > 4 else []  # Adjust index as necessary
            current_row = [port_channel] + member_ports
        elif line and current_row:  # Handle continuation lines for member ports
            continuation_ports = line.split()
            current_row.extend(continuation_ports)

    # Append the last processed port-channel if any
    if current_row:
        data_rows.append(current_row)

    return data_rows

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            for row in rows:
                excel_data.append([switch] + row)
    except (NetmikoTimeoutException, NetmikoAuthenticationException) as e:
        print(f"Connection or authentication error with {switch}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Check if excel_data is not empty before proceeding
if excel_data:
    # Determine the max number of member ports to set the column headers
    max_ports = max(len(row) - 2 for row in excel_data)  # Subtracting Switch Name and Port-Channel
    column_headers = ['Switch', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports + 1)]
    df = pd.DataFrame(excel_data, columns=column_headers)
    df.to_excel("switch_port_channels.xlsx", index=False)
    print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
else:
    print("No data was collected from the switches. Please check the connections and outputs.")
