import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

# Function to process the output and return a list of rows with the data
def process_output(output):
    data_rows = []
    current_port_channel = None
    for line in output.splitlines():
        if 'Port-' in line or '----' in line or 'Flags:' in line:
            continue  # Skip header and divider lines
        if line.startswith('Po'):
            try:
                # Try to parse assuming 'Eth' comes before the member ports
                parts = line.split()
                port_channel = parts[0]  # The port-channel identifier
                member_index = next(i for i, part in enumerate(parts) if 'Eth' in part)
                member_ports = parts[member_index:]  # Get all member ports
                data_rows.append([port_channel] + member_ports)
                current_port_channel = port_channel
            except Exception as e:
                print(f"Error parsing line: '{line}'. Error: {e}")
        elif line.strip() and current_port_channel:  # Continuation of member ports
            try:
                # Add continuation ports directly to the last added port-channel's list
                continuation_ports = line.strip().split()
                data_rows[-1].extend(continuation_ports)
            except Exception as e:
                print(f"Error adding continuation ports from line: '{line}'. Error: {e}")

    return data_rows

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            for row in rows:
                excel_data.append([switch] + row)
    except (NetmikoTimeoutException, NetmikoAuthenticationException) as e:
        print(f"Connection or authentication error with {switch}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Check if excel_data is not empty before proceeding
if excel_data:
    # Determine the max number of member ports to set the column headers
    max_ports = max(len(row) - 2 for row in excel_data)  # Subtracting Switch Name and Port-Channel

    # Construct the DataFrame with the appropriate number of columns
    column_headers = ['Switch', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports + 1)]
    df = pd.DataFrame(excel_data, columns=column_headers)

    # Create the Excel file
    df.to_excel("switch_port_channels.xlsx", index=False)

    print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
else:
    print("No data was collected from the switches. Please check the connections and outputs.")
