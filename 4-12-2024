import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

def process_output(output):
    data_rows = []
    current_row = []  # To collect data from lines that belong to a port-channel

    for line in output.splitlines():
        # Clean up the line to ensure no leading/trailing whitespace
        line = line.strip()

        # Ignore header lines based on known text or structure
        if any(keyword in line for keyword in ('Flags:', 'Group Port-', '---')):
            continue
        
        # Detect if it's a new port-channel or a continuation of ports
        if line.startswith('Po'):
            if current_row:
                data_rows.append(current_row)
            # Split the line and capture port-channel and member ports
            parts = line.split()
            port_channel = parts[0]  # The port-channel identifier
            # Assume member ports start after the protocol type, which could be wrong and needs checking
            member_ports = [part for part in parts if 'Eth' in part or '(P)' in part or '(D)' in part]
            current_row = [port_channel] + member_ports
        elif line and current_row and 'Po' not in line:  # Handle continuation of member ports
            continuation_ports = [part for part in line.split() if 'Eth' in part or '(P)' in part or '(D)' in part]
            current_row.extend(continuation_ports)

    # Append the last processed row if it exists
    if current_row:
        data_rows.append(current_row)

    return data_rows

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            for row in rows:
                excel_data.append([switch] + row)
    except (NetmikoTimeoutException, NetmikoAuthenticationException) as e:
        print(f"Connection or authentication error with {switch}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Check if excel_data is not empty before proceeding
if excel_data:
    max_ports = max(len(row) - 2 for row in excel_data)  # Subtracting Switch Name and Port-Channel
    column_headers = ['Switch', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports + 1)]
    df = pd.DataFrame(excel_data, columns=column_headers)
    df.to_excel("switch_port_channels.xlsx", index=False)
    print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
else:
    print("No data was collected from the switches. Please verify command outputs and script logs.")
