import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

def process_output(output):
    data_rows = []
    current_row = None  # Track the current port-channel being processed

    for line in output.splitlines():
        line = line.strip()
        # Ignore header and non-data lines
        if line.startswith('Flags:') or line.startswith('Group') or '---' in line or not line:
            continue

        # Check if the line starts with port-channel info
        if line.startswith('Po'):
            parts = line.split()
            port_channel = parts[0]  # The port-channel identifier
            member_ports = parts[-1:]  # Member ports are at the end
            current_row = [port_channel] + member_ports
            data_rows.append(current_row)
        elif line:  # If the line is continuation of member ports and doesn't start with 'Po'
            continuation_ports = line.split()
            if current_row:  # Ensure there is an active port-channel being processed
                current_row.extend(continuation_ports)

    return data_rows

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            for row in rows:
                excel_data.append([switch] + row)
    except (NetmikoTimeoutException, NetmikoAuthenticationException) as e:
        print(f"Connection or authentication error with {switch}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Check if excel_data is not empty before proceeding
if excel_data:
    # Determine the max number of member ports to set the column headers
    max_ports = max(len(row) - 2 for row in excel_data)  # Subtracting Switch Name and Port-Channel

    # Construct the DataFrame with the appropriate number of columns
    column_headers = ['Switch', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports + 1)]
    df = pd.DataFrame(excel_data, columns=column_headers)

    # Create the Excel file
    df.to_excel("switch_port_channels.xlsx", index=False)

    print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
else:
    print("No data was collected from the switches. Please check the connections and outputs.")
