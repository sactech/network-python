import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

# Function to process the output and return a list of rows with the data
def process_output(output):
    data_rows = []
    for line in output.splitlines():
        # Start of port-channel entry or a continuation line for member ports
        if line.startswith('Po'):
            # Split the line, and only take elements after 'Eth' which indicates the protocol column
            parts = line.split('Eth')
            port_channel = parts[0].split()[0]  # The port-channel identifier
            # Use the last part after splitting which should contain the member ports information
            member_ports = 'Eth' + parts[-1].strip()  # Add 'Eth' back to the member ports
            member_ports = member_ports.replace('(D)', '').replace('(P)', '').split()  # Clean and split member ports
            data_rows.append([port_channel] + member_ports)
        elif line.strip() and 'Port-' not in line:  # Continuation line for member ports
            # Clean and split the continuation line for member ports
            continuation_ports = line.strip().replace('(D)', '').replace('(P)', '').split()
            # Extend the last entry in data_rows with the continuation ports
            data_rows[-1].extend(continuation_ports)

    return data_rows

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            # Process the output from the switch
            rows = process_output(output)
            # Add switch name to each row and add to the main data list
            for row in rows:
                excel_data.append([switch] + row)
    except (NetmikoTimeoutException, NetmikoAuthenticationException) as e:
        print(f"Connection or authentication error with {switch}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Check if excel_data is not empty before proceeding
if excel_data:
    # Determine the max number of member ports to set the column headers
    max_ports = max(len(row) - 1 for row in excel_data)  # Subtracting Port-Channel column

    # Construct the DataFrame with the appropriate number of columns
    column_headers = ['Switch', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports)]
    df = pd.DataFrame(excel_data, columns=column_headers)

    # Create the Excel file
    df.to_excel("switch_port_channels.xlsx", index=False)

    print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
else:
    print("No data was collected from the switches. Please check the connections and outputs.")
