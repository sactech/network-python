import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

def process_output(output):
    data_rows = []
    current_ports = []  # To store ongoing port-channel's member ports

    for line in output.splitlines():
        line = line.strip()
        if line.startswith('Po'):
            if current_ports:  # If there's an ongoing port-channel, finalize it
                data_rows.append(current_ports)
            # Start a new port-channel entry
            parts = line.split(maxsplit=4)  # Split into components, with member ports as the last component
            if len(parts) == 5:
                port_channel, status, ptype, protocol, members = parts
                current_ports = [port_channel, status, ptype, protocol] + members.split()
            else:
                current_ports = parts  # In case the line is malformed
        elif line and current_ports:  # Handling continuation lines for member ports
            continuation_ports = line.split()
            current_ports.extend(continuation_ports)

    if current_ports:  # Don't forget to add the last port-channel if there's no new "Po" to trigger it
        data_rows.append(current_ports)

    return data_rows

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            for row in rows:
                excel_data.append([switch] + row)  # Prepend switch name to each row
    except NetmikoTimeoutException:
        print(f"Connection timed out for {switch}. The device might be unreachable or offline.")
    except NetmikoAuthenticationException:
        print(f"Authentication failed for {switch}. Check the username/password.")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Check if data was collected
if excel_data:
    # Determine the maximum number of columns for member ports
    max_ports = max(len(row) - 5 for row in excel_data)  # Adjust column count based on expected data columns
    column_headers = ['Switch', 'Port-Channel', 'Status', 'Type', 'Protocol'] + [f'Member Port {i+1}' for i in range(max_ports)]
    df = pd.DataFrame(excel_data, columns=column_headers)
    df.to_excel("switch_port_channels.xlsx", index=False)
    print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
else:
    print("No data was collected from the switches. Please check the connections and outputs.")
