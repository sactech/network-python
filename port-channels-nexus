import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Function to process the output and return a row of data
def process_output(output):
    data_rows = []
    current_row = []
    for line in output.splitlines():
        if 'Po' in line and not line.strip().startswith(("Group", "-----")):  # Filter header and divider lines
            elements = line.split()
            if elements[0].startswith('Po'):  # New port-channel entry
                if current_row:  # If there is a current_row, it means it's complete and can be added to data_rows
                    data_rows.append(current_row)
                current_row = [elements[1]] + elements[4:]  # Start new row with port-channel and member ports
            else:  # Continuation of the current port-channel entry
                current_row.extend(elements)
    if current_row:  # Add the last row if it exists
        data_rows.append(current_row)
    return data_rows

# Initialize a list to hold data for the Excel file
excel_data = []

# Max number of member ports found, used to determine the number of columns
max_ports = 0

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,  # Connection timeout in seconds
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            rows = [[switch] + row for row in rows]  # Prepend switch name to each row
            excel_data.extend(rows)
            # Update max_ports if current rows have more member ports
            for row in rows:
                max_ports = max(max_ports, len(row) - 2)  # Subtracting Device Name and Port-Channel columns
    except NetmikoTimeoutException:
        print(f"Connection timed out for {switch}. The device might be unreachable or offline.")
    except NetmikoAuthenticationException:
        print(f"Authentication failed for {switch}. Check the username/password.")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Construct the DataFrame
column_headers = ['Device Name', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports + 1)]
df = pd.DataFrame(excel_data, columns=column_headers)

# Create the Excel file
df.to_excel("switch_port_channels.xlsx", index=False)

print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
