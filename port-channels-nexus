import pandas as pd
import getpass
import yaml
from netmiko import ConnectHandler, NetmikoTimeoutException, NetmikoAuthenticationException

# Load switch details from devices.yaml
with open("devices.yaml", "r") as file:
    data = yaml.safe_load(file)
switches = data.get("switches", [])

# Prompt for credentials
username = input("Enter your SSH username: ")
password = getpass.getpass("Enter your SSH password: ")

# Command to execute
command = "show port-channel summary"

# Function to process the output and return a row of data
def process_output(output):
    data_rows = []
    current_port_channel = None
    for line in output.splitlines():
        # Ignore lines that do not contain relevant data
        if line.strip().startswith(('Group', '-----', 'Flags:', '')):
            continue
        # Check for port-channel lines
        elif line.startswith('Po'):
            elements = line.split()
            current_port_channel = elements[0]  # Keep track of the current port-channel
            # Get member ports, considering they might be on the same line
            member_ports = elements[4:]  # The member ports start at index 4
            data_rows.append([current_port_channel] + member_ports)
        # Handle wrapped lines containing only member ports
        elif line.strip() and current_port_channel:
            # This assumes a wrapped line contains only a single member port
            wrapped_port = line.strip()
            # Append the wrapped port to the last entry in data_rows
            data_rows[-1].append(wrapped_port)
    return data_rows

# Initialize a list to hold data for the Excel file
excel_data = []

# Iterate over each switch and gather data
for switch in switches:
    device = {
        "device_type": "cisco_nxos",
        "host": switch,
        "username": username,
        "password": password,
        "conn_timeout": 10,  # Connection timeout in seconds
    }
    try:
        print(f"Connecting to {switch}...")
        with ConnectHandler(**device) as conn:
            output = conn.send_command(command)
            rows = process_output(output)
            # Prepend switch name to each row
            for row in rows:
                excel_data.append([switch] + row)
    except NetmikoTimeoutException:
        print(f"Connection timed out for {switch}. The device might be unreachable or offline.")
    except NetmikoAuthenticationException:
        print(f"Authentication failed for {switch}. Check the username/password.")
    except Exception as e:
        print(f"An unexpected error occurred with {switch}: {e}")

# Determine the max number of member ports to set the column headers
max_ports = max(len(row) - 2 for row in excel_data)  # Subtracting Switch Name and Port-Channel

# Construct the DataFrame with the appropriate number of columns
column_headers = ['Device Name', 'Port-Channel'] + [f'Member Port {i}' for i in range(1, max_ports + 1)]
df = pd.DataFrame(excel_data, columns=column_headers)

# Create the Excel file
df.to_excel("switch_port_channels.xlsx", index=False)

print("Script completed. Check 'switch_port_channels.xlsx' for the output.")
